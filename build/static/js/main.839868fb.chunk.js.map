{"version":3,"sources":["service/API.js","components/Card/index.js","components/Page/index.js","App.js","index.js"],"names":["getAPI","axios","create","baseURL","items","colorSelect","item","bgColor","backgroundColor","color","className","id","num","src","img","alt","name","type","map","style","useState","pokemons","setPokemon","search","setSearch","pokemonsSearch","setPokemonsSearch","useEffect","loadAPI","a","API","get","then","response","data","pokemon","list","useMemo","searchLower","toLowerCase","NaN","isNaN","parseInt","filter","poke","includes","value","placeholder","onChange","ev","target","key","Card","Page","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"4OAOeA,E,OAJAC,EAAMC,OAAO,CACxBC,QAFQ,kF,eCCG,cAAgB,IAAbC,EAAY,EAAZA,MAEd,SAASC,EAAYC,GACjB,IAAIC,EAAU,GACd,OAAQD,GACJ,IAAK,MACDC,EAAU,UACV,MACJ,IAAK,QACDA,EAAU,UACV,MACJ,IAAK,SACDA,EAAU,UACV,MACJ,IAAK,WACDA,EAAU,UACV,MACJ,IAAK,QACDA,EAAU,UACV,MACJ,IAAK,WACDA,EAAU,UACV,MACJ,IAAK,OACDA,EAAU,UACV,MACJ,IAAK,SACDA,EAAU,UACV,MACJ,IAAK,QACDA,EAAU,UACV,MACJ,IAAK,SACDA,EAAU,UACV,MACJ,IAAK,MACDA,EAAU,UACV,MACJ,IAAK,SACDA,EAAU,UACV,MACJ,IAAK,SACDA,EAAU,UACV,MACJ,IAAK,UACDA,EAAU,UACV,MACJ,IAAK,OACDA,EAAU,UACV,MACJ,IAAK,QACDA,EAAU,UACV,MACJ,IAAK,QACDA,EAAU,UAKlB,MAAO,CAACC,gBAAiBD,EAASE,MAAO,QAE7C,OACI,sBAAKC,UAAU,cAAcC,GAAI,UAAYP,EAAMQ,IAAnD,UACI,sBAAKF,UAAU,eAAf,UACI,qBAAKG,IAAKT,EAAMU,IAAKC,IAAI,YACzB,kCAAKX,EAAMQ,UAGf,6BAAKR,EAAMY,OACX,qBAAKN,UAAU,cAAf,SACKN,EAAMa,KAAKC,KAAI,SAAAZ,GAAI,OAChB,mBAAGa,MAAOd,EAAYC,GAAtB,SAA8BA,aCpEnC,aACX,MAA+Bc,qBAA/B,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,qBAA5C,mBAAOK,EAAP,KAAuBC,EAAvB,KAsBA,OApBAC,qBAAU,WACN,IAAMC,EAAO,uCAAG,4BAAAC,EAAA,sEACKC,EAAIC,IAAI,IAAIC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,KAAKC,WADjD,OACRC,EADQ,OAEZd,EAAWc,GACXV,EAAkBU,GAHN,2CAAH,qDAKbR,MACD,IAEHS,mBAAQ,WACJ,IAAIC,EAAW,OAAGf,QAAH,IAAGA,OAAH,EAAGA,EAAQgB,cACtBC,EAAMC,MAAMC,SAASJ,IAErBZ,EADAc,EACiB,OAACnB,QAAD,IAACA,OAAD,EAACA,EAAUsB,QAAO,SAACC,GAAD,OAAUA,EAAK5B,KAAKuB,cAAcM,SAASP,MAG7D,OAACjB,QAAD,IAACA,OAAD,EAACA,EAAUsB,QAAO,SAACC,GAAD,OAAUA,EAAKhC,IAAI2B,cAAcM,SAASP,SAElF,CAACf,IAGA,sBAAKb,UAAU,OAAf,UACI,4CACA,wBAAQA,UAAU,SAAlB,SACI,8BACI,uBAAOO,KAAK,OAAO6B,MAAOvB,EAAQwB,YAAY,uDAA0CC,SAAU,SAACC,GAAD,OAAQzB,EAAUyB,EAAGC,OAAOJ,cAGtI,yBAASpC,UAAU,eAAnB,gBACKe,QADL,IACKA,OADL,EACKA,EAAgBP,KAAI,SAACZ,EAAM6C,GAAP,OACjB,cAACC,EAAD,CAAMhD,MAAOE,GAAW6C,YCtC7B,aACb,OAAO,cAACE,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.839868fb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = 'https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json'\r\nconst getAPI = axios.create({\r\n    baseURL: API\r\n})\r\n\r\nexport default getAPI;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default ({ items }) => {\r\n  \r\n    function colorSelect(item) {\r\n        let bgColor = ''\r\n        switch (item) {\r\n            case 'Bug':\r\n                bgColor = '#1b4928';\r\n                break;\r\n            case 'Ghost':\r\n                bgColor = '#040706';\r\n                break;\r\n            case 'Dragon':\r\n                bgColor = '#448c93';\r\n                break;\r\n            case 'Electric':\r\n                bgColor = '#e3e32b';\r\n                break;\r\n            case 'Fairy':\r\n                bgColor = '#961944';\r\n                break;\r\n            case 'Fighting':\r\n                bgColor = '#974026';\r\n                break;\r\n            case 'Fire':\r\n                bgColor = '#aa2022';\r\n                break;\r\n            case 'Flying':\r\n                bgColor = '#4a677d';\r\n                break;\r\n            case 'Grass':\r\n                bgColor = '#147b3d';\r\n                break;\r\n            case 'Ground':\r\n                bgColor = '#aa6e2e'\r\n                break;\r\n            case 'Ice':\r\n                bgColor = '#87d1f3'\r\n                break;\r\n            case 'Normal':\r\n                bgColor = '#73525b'\r\n                break;\r\n            case 'Poison':\r\n                bgColor = '#5e2d88'\r\n                break;\r\n            case 'Psychic':\r\n                bgColor = '#a32b6c'\r\n                break;\r\n            case 'Rock':\r\n                bgColor = '#47190b'\r\n                break;\r\n            case 'Steel':\r\n                bgColor = '#5e766d'\r\n                break;\r\n            case 'Water':\r\n                bgColor = '#1552e2'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return {backgroundColor: bgColor, color: \"#fff\"}\r\n    }\r\n    return (\r\n        <div className=\"pokemonCard\" id={'pokemon' + items.num}>\r\n            <div className=\"pokemonImage\">\r\n                <img src={items.img} alt=\"Pokemon\" />\r\n                <p>#{items.num}</p>\r\n            </div>\r\n\r\n            <h2>{items.name}</h2>\r\n            <div className=\"pokemonType\">\r\n                {items.type.map(item => (\r\n                    <p style={colorSelect(item)}>{item}</p>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useMemo } from 'react';\r\nimport './style.css';\r\nimport API from '../../service/API';\r\nimport Card from '../Card';\r\n\r\n\r\nexport default () => {\r\n    const [pokemons, setPokemon] = useState();\r\n    const [search, setSearch] = useState();\r\n    const [pokemonsSearch, setPokemonsSearch] = useState();\r\n\r\n    useEffect(() => {\r\n        const loadAPI = async () => {\r\n            let list = await API.get('').then(response => (response.data.pokemon));\r\n            setPokemon(list);\r\n            setPokemonsSearch(list);\r\n        }\r\n        loadAPI();\r\n    }, []);\r\n\r\n    useMemo(() => {\r\n        let searchLower = search?.toLowerCase();\r\n        let NaN = isNaN(parseInt(searchLower))\r\n        if (NaN) {\r\n            setPokemonsSearch(pokemons?.filter((poke) => poke.name.toLowerCase().includes(searchLower)))\r\n        }\r\n        else {\r\n            setPokemonsSearch(pokemons?.filter((poke) => poke.num.toLowerCase().includes(searchLower)))\r\n        }\r\n    }, [search]);\r\n\r\n    return (\r\n        <div className=\"page\" >\r\n            <h1>Pok√©dex</h1>\r\n            <header className=\"header\">\r\n                <nav>\r\n                    <input type=\"text\" value={search} placeholder='Digite o Nome ou o N√∫mero do Pokemon üîç' onChange={(ev) => setSearch(ev.target.value)} />\r\n                </nav>\r\n            </header>\r\n            <section className=\"pokemon-list\">\r\n                {pokemonsSearch?.map((item, key) => (\r\n                    <Card items={item} key={key} />\r\n                ))}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport Page from './components/Page'\n\nexport default () => {\n  return <Page />;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}